// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rimrock_api.Data;

namespace rimrock_api.Migrations
{
    [DbContext(typeof(RimRockApiDbContext))]
    partial class RimRockApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("rimrock_api.Models.Location", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cost");

                    b.Property<string>("Name");

                    b.Property<int>("RegionID");

                    b.HasKey("ID");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Cost = "$$$$$",
                            Name = "Cliff Creek",
                            RegionID = 1
                        },
                        new
                        {
                            ID = 2,
                            Cost = "$$",
                            Name = "Long Shore",
                            RegionID = 1
                        },
                        new
                        {
                            ID = 3,
                            Cost = "$$$$",
                            Name = "Peakies",
                            RegionID = 1
                        },
                        new
                        {
                            ID = 4,
                            Cost = "$$$",
                            Name = "Big Rock",
                            RegionID = 1
                        },
                        new
                        {
                            ID = 5,
                            Cost = "$",
                            Name = "Little Rocks",
                            RegionID = 1
                        });
                });

            modelBuilder.Entity("rimrock_api.Models.Region", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Greater Seattle"
                        });
                });

            modelBuilder.Entity("rimrock_api.Models.Retailer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("RegionID");

                    b.Property<string>("Specialty");

                    b.HasKey("ID");

                    b.ToTable("Retailers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Second Ascents",
                            RegionID = 1,
                            Specialty = "Climbing"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Yeager's",
                            RegionID = 1,
                            Specialty = "Skiing"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Backcountry Essentials",
                            RegionID = 1,
                            Specialty = "Climbing"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
